networks:
  manifold:
    name: manifold
volumes:
  docker-data:
  redis-data:
services:
  #proxy - Traefik
  proxy:
    container_name: proxy
    image: traefik:v3.1.6
    networks:
      - manifold
    command:
      ##- --api.insecure=true
      - --accesslog
      - --log
      - --api.insecure=false #you need to be validated
      - --api.dashboard=true
      - --providers.docker
      - --providers.docker.exposedByDefault=false #not discoverying ALL docker services automatically

      #- --entrypoints.db.address=:3306
    ports:
      # The HTTP port
      - "${TRAEFIK_PORT}:80"
      # The Web UI (enabled by --api.insecure=true)
      #- "${TRAEFIK_ADMIN_PORT}:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik/credentials.txt:/credentials.txt:ro
    labels:
      - "traefik.enable=true"
      #- "traefik.http.routers.proxy.rule=Host(`traefik-trial-67.localcan.dev`)"
      #- "traefik.http.routers.proxy.rule=Path('/dashboard')"
      - "traefik.http.routers.proxy.rule=PathPrefix(`/api`) || PathPrefix(`/dashboard`)"
      - "traefik.http.routers.proxy.service=api@internal"
      - "traefik.http.routers.proxy.middlewares=auth"
      # always escape $ by adding a second one: $$
      #- "traefik.http.middlewares.auth.basicauth.users=USERNAME:PASSWORD"
      - "traefik.http.middlewares.auth.basicauth.usersfile=/credentials.txt"
    #env_file: ".env"
  #redis
  redis:
    image: redis:6
    command: redis-server --save 60 1 --loglevel warning
    ports:
      - "6379:6379"
    networks:
      - manifold
    volumes:
      - redis-data:/data
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
  #mariadb
  db:
    image: mariadb:latest
    container_name: db
    networks:
      - manifold
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      MYSQL_USER: "manifold"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
      MYSQL_DATABASE: "${MYSQL_DATABASE}"
    ports:
      - "3306:3306"
    volumes:
      - ./mysql-data:/var/lib/mysql
    security_opt:
      - seccomp:unconfined
    # labels:
    #   - "traefik.enable=true"
    #   - "traefik.tcp.routers.mysql.entrypoints=db"
    #   #   - "traefik.docker.network=manifold"
    #   - "traefik.tcp.routers.mysql.rule=HostSNI(`*`)"
    #   - "traefik.tcp.services.db.loadbalancer.server.port=3306"
    #- "traefik.tcp.routers.db.entrypoints=mysql"
    #- "traefik.tcp.routers.mariadb-router.entrypoints=mariadb" # Use the mariadb entry point
    #- "traefik.tcp.routers.mariadb-router.rule=HostSNI(`*`)" # SNI rule for TCP (HostSNI is needed for TCP)
    #- "traefik.tcp.routers.mariadb-router.service=mariadb-service"
    #- "traefik.tcp.services.mariadb-service.loadbalancer.server.port=3306"

  docker:
    image: docker:20-dind
    privileged: true
    ports:
      - "2375:2375"
    networks:
      - manifold
    volumes:
      - docker-data:/var/lib/docker
      - ./scripts:/opt/scripts
    environment:
      DOCKER_DRIVER: "overlay2"
      DOCKER_TLS_CERTDIR: ""
    restart: always
    healthcheck:
      test: ["CMD", "docker", "info"]
      interval: 30s
      timeout: 10s
      retries: 5

  processmaker:
    image: processmaker/pm4-dev:4.3v1
    #ports:
    #  - "80:80"
    #  - "6001:6001"
    depends_on:
      #db:
      #  condition: service_healthy
      redis:
        condition: service_healthy
      docker:
        condition: service_healthy
    networks:
      - manifold
    volumes:
      - ./processmaker:/opt/processmaker
      - ./env:/opt/.env
      - ./scripts:/opt/scripts
    environment:
      PM_branch: v4.11.5
      WAIT_FOR_DEPENDENTS: 1
      DOCKER_HOST: "tcp://docker:2375"
      NO_PROXY: "127.0.0.1,localhost,docker:2375"
  #whoami:
  #  image: containous/whoami:latest
  #  restart: unless-stopped
  #ports:
  #  - 8000:80
  #  labels:
  #    - traefik.enable=false
  #    - traefik.http.routers.whoami.rule=PathPrefix(`/whoami`)
